#!/bin/bash

if [[ "$1" == "docker-cli-plugin-metadata" ]]; then
cat << HERE
{
     "SchemaVersion": "0.1.0",
     "Vendor": "https://github.com/SvenDowideit/",
     "Version": "v0.1.0",
     "ShortDescription": "Swarm aware docker exec"
}
HERE
exit
fi

prefix=""
postcmd=""

DOCKERCMD=$(echo "$0" | sed 's/.*\///' | sed 's/[^-]*-//')
shift
if test $# -lt 2; then
     HELP=true
fi

while test $# -gt 0
do
    case "$1" in
     #    "$DOCKERCMD")
     #        ;;
        --help) HELP=true
            ;;
        -*)
          opt="$1"
          if [[ "$opt" == "-e" || "$opt" == "--env" || "$opt" == "--detatch-keys" || "$opt" == "-u" || "$opt" == "--user" || "$opt" == "-w" || "$opt" == "--workdir" ]]; then
               shift
               opt="$opt $1"
          fi
          if [[ "$servicename" == "" ]]; then
               prefix="$prefix $opt"
          else
               postcmd="$postcmd $opt"
          fi
            ;;
        *) 
          if [[ "$servicename" == "" ]]; then
               servicename="$1"
          else
               postcmd="$postcmd $1"
          fi
            ;;
    esac
    shift
done

if [ "$HELP" == "true" ]; then
     echo "docker ex [OPTIONS] SERVICE[.TASKID] COMMAND [ARG..]"
     echo
     echo "  Run a command in a running service task / tasks"
     echo
     echo "  options the same as 'docker exec'"
     echo
     docker exec --help
     exit 1
fi

# detect if its a local running container first..
if name=$(docker ps --format "{{.ID}}" | grep "^$servicename$"); then
     exec docker exec $prefix $name $postcmd
fi
if name=$(docker ps --format "{{.Names}}" | grep "^$servicename$"); then
     exec docker exec $prefix $name $postcmd
fi

tasklines=()
while IFS= read -r line; do
    tasklines+=( "$line" )
done < <( docker service ps $servicename --format "{{.Name}},{{.Node}},{{.CurrentState}}" | grep "Running" )
echo "Found ${#tasklines[@]} $servicename tasks"
echo

self=$(docker node inspect --format "{{.Description.Hostname}}" self)

echo "----------------------------------------------------------"
for taskline in "${tasklines[@]}"; do
     # first, work out what node we need to get to
     taskname=$(echo "$taskline" | sed 's/,.*//')
     original_node=$(echo "$taskline" | sed 's/.*,\(.*\),.*/\1/')

     # skip the ssh if we're local
     # TODO: add sudo support if needed
     dockercmd="docker"
     node="$original_node"
     if [[ "$self" != "$original_node" ]]; then
          if ! ping -c 1 $node >/dev/null 2>&1 ; then
               node="$original_node.$(hostname -d)"
          fi
          if ! ping -c 1 $node >/dev/null 2>&1 ; then
               # last ditch attempt
               node="$original_node.it.csiro.au"
          fi
          dockercmd="ssh -t $node docker"
          # TODO: skip the ssh and use -H if we're >18.09 and have a way to ssh
     fi

     # # second, find the service task's running container
     containername=$($dockercmd ps --format '{{.Names}}' | grep "^$taskname" | sed 's/\r//')

     #echo "$dockercmd exec $prefix $containername $postcmd"
     #echo "----------------------------------------------------------"
     echo "$node:"
     $dockercmd exec $prefix $containername $postcmd
     echo "----------------------------------------------------------"
done

exit 0